# Remaining Charging Time Package
# Estimates time until battery is fully charged

substitutions:
  # Name and ID parameters
  sensor_name: "bms0 remaining charging time"
  sensor_id: bms0_remaining_charging_time

  # Configuration parameters
  update_interval: "30s"
  accuracy_decimals: "1"

  # Sensor ID parameters (can be overridden)
  current_sensor_id: bms0_average_current
  capacity_remaining_id: bms0_capacity_remaining
  nominal_capacity_id: bms0_nominal_capacity

sensor:
  - platform: template
    name: ${sensor_name}
    id: ${sensor_id}
    unit_of_measurement: "h"
    device_class: duration
    accuracy_decimals: ${accuracy_decimals}
    lambda: |-
      if (id(${current_sensor_id}).has_state() && id(${capacity_remaining_id}).has_state() && id(${nominal_capacity_id}).has_state()) {
        float current = id(${current_sensor_id}).state;
        float remaining_capacity = id(${capacity_remaining_id}).state;
        float nominal_capacity = id(${nominal_capacity_id}).state;

        if (remaining_capacity >= nominal_capacity * 0.99f) {
          return 0.0f;
        }

        if (current > 0.1f) {
          float capacity_to_charge = nominal_capacity - remaining_capacity;
          float hours_to_full = capacity_to_charge / current;
          return hours_to_full;
        }
      }
      return NAN;
    update_interval: ${update_interval}
