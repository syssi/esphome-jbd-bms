substitutions:
  name: jbd-bms-ble
  device_description: "Monitor and control a Xiaoxiang Battery Management System (JBD-BMS) via BLE"
  external_components_source: github://syssi/esphome-jbd-bms@main
  mac_address: 70:3e:97:07:c0:3e

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: "syssi.esphome-jbd-bms"
    version: 1.5.0

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

external_components:
  - source: ${external_components_source}
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s

ota:

logger:
  level: DEBUG

# If you use Home Assistant please remove this `mqtt` section and uncomment the `api` component!
# The native API has many advantages over MQTT: https://esphome.io/components/api.html#advantages-over-mqtt
mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client
  reboot_timeout: 0s

# api:
#   reboot_timeout: 0s

deep_sleep:
  id: deep_sleep0
  run_duration: 2min
  sleep_duration: 10min

esp32_ble_tracker:

ble_client:
  - id: client0
    mac_address: ${mac_address}

jbd_bms_ble:
  - id: bms0
    ble_client_id: client0
    update_interval: 2s

sensor:
  - platform: jbd_bms_ble
    jbd_bms_ble_id: bms0
    power:
      name: "${name} power"
    total_voltage:
      name: "${name} total voltage"
    state_of_charge:
      id: state_of_charge_sensor
      name: "${name} state of charge"
      on_value:
        - if:
            condition:
              and:
                - switch.is_off: charging_switch
                - sensor.in_range:
                    id: state_of_charge_sensor
                    below: 80.0
            then:
              - switch.turn_on: charging
        - if:
            condition:
              and:
                - switch.is_on: charging_switch
                - sensor.in_range:
                    id: state_of_charge_sensor
                    above: 80.0
            then:
              - switch.turn_off: charging
        # Suspend deep sleep at the end of a charge cycle to stop on point
        - if:
            condition:
              and:
                - switch.is_on: charging_switch
                - sensor.in_range:
                    id: state_of_charge_sensor
                    above: 75.0
                    below: 81.0
            then:
              - deep_sleep.prevent: deep_sleep0

switch:
  - platform: ble_client
    ble_client_id: client0
    name: "${name} enable bluetooth connection"

  - platform: jbd_bms_ble
    jbd_bms_ble_id: bms0
    charging:
      name: "${name} charging"
      id: charging_switch
    discharging:
      name: "${name} discharging"
